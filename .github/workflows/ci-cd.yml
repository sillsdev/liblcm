
name: LibLCM CI and CD

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_NOLOGO: true

    steps:
    - name: Be Certain
      run: cd \ && dir icuuc*.dll /b/s
      if: matrix.os == 'windows-latest'

    - name: Checkout
      uses: actions/checkout@v2.3.4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Install mono-devel package
      run: sudo apt-get install mono-devel
      if: matrix.os == 'ubuntu-latest'

    - name: Install icu-fw package
      run: wget -qO - http://linux.lsdev.sil.org/downloads/sil-testing.gpg | sudo tee /etc/apt/trusted.gpg.d/linux-lsdev-sil-org.asc &&
        sudo add-apt-repository "deb http://linux.lsdev.sil.org/ubuntu $(lsb_release -sc)-experimental main" &&
        sudo apt-get install icu-fw
      if: matrix.os == 'ubuntu-latest'

    - name: Build
      run: dotnet build

    - name: Debug
      run: cd \ && dir icuuc*.dll /b/s
      if: matrix.os == 'windows-latest'

    - name: Test
      run: dotnet test --no-restore --no-build -p:ParallelizeAssembly=false

    - name: Package
      run: dotnet pack --include-symbols --no-restore --no-build -p:SymbolPackageFormat=snupkg 

    - name: Publish to Nuget
      run: dotnet nuget push artifacts/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.SILLSDEV_PUBLISH_NUGET_ORG}} --skip-duplicate
      if: github.event_name == 'push' && matrix.os == 'ubuntu-latest'

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: NugetPackages
        path: artifacts/*.nupkg
      if: github.event_name == 'pull_request'
