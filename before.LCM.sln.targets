<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">

	<PropertyGroup>
		<NuGetExeUrl>https://dist.nuget.org/win-x86-commandline/latest/nuget.exe</NuGetExeUrl>
		<NuGetPath>$(MSBuildThisFileDirectory).nuget</NuGetPath>
		<NuGetExe>$(NuGetPath)/nuget.exe</NuGetExe>
		<NuGetCommand Condition=" '$(OS)' == 'Windows_NT'">"$(NuGetExe)"</NuGetCommand>
		<NuGetCommand Condition=" '$(OS)' != 'Windows_NT' ">mono --runtime=v4.0.30319 $(NuGetExe)</NuGetCommand>
	</PropertyGroup>

	<Target Name="RestorePackages" BeforeTargets="Rebuild;Build" DependsOnTargets="GetNuGet">
		<Exec Command="$(NuGetCommand) Restore &quot;$(SolutionPath)&quot;" Condition="'$(SolutionPath)' != ''" />
		<Exec Command="$(NuGetCommand) Restore &quot;%(Solution.Identity)&quot;" Condition="'%(Solution.Identity)' != ''" />
	</Target>

	<PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
		<!-- In VS2013, the assembly contains the VS version. -->
		<CodeTaskAssembly Condition="'$(MSBuildAssemblyVersion)' != '' and '$(MSBuildAssemblyVersion)' == '12.0'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll</CodeTaskAssembly>
		<!-- In VS2015+, the assembly was renamed, hopefully this will be the last condition! -->
		<CodeTaskAssembly Condition="'$(MSBuildAssemblyVersion)' != '' and '$(MSBuildAssemblyVersion)' &gt;= '14.0'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</CodeTaskAssembly>
		<!-- fall back -->
		<CodeTaskAssembly Condition="'$(MSBuildAssemblyVersion)' == ''">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll</CodeTaskAssembly>
	</PropertyGroup>

	<Target Name="GetNuGet" Condition="!Exists('$(NuGetExe)')">
		<MakeDir Directories="$(NuGetPath)" Condition="!Exists('$(NuGetPath)')" />
		<DownloadNuGet TargetPath="$(NuGetExe)" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="wget $(NuGetExeUrl) || curl -O -L $(NuGetExeUrl)"
			WorkingDirectory="$(NuGetPath)"
			Condition="'$(OS)' != 'Windows_NT'" />
	</Target>

	<UsingTask TaskName="DownloadNuGet" TaskFactory="CodeTaskFactory" AssemblyFile="$(CodeTaskAssembly)" Condition="'$(OS)' == 'Windows_NT'">
		<ParameterGroup>
			<TargetPath ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Net" />
			<Using Namespace="Microsoft.Build.Framework" />
			<Using Namespace="Microsoft.Build.Utilities" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
				try {
					TargetPath = Path.GetFullPath(TargetPath);
					if (!Directory.Exists(Path.GetDirectoryName(TargetPath)))
						Directory.CreateDirectory(Path.GetDirectoryName(TargetPath));

					Log.LogMessage("Downloading latest version of NuGet.exe...");

					ServicePointManager.SecurityProtocol |= SecurityProtocolType.Tls12;
					Log.LogMessage("Enabled Protocols: " + ServicePointManager.SecurityProtocol);

					WebClient webClient = new WebClient();
					webClient.DownloadFile("$(NuGetExeUrl)", TargetPath);

					return true;
				}
				catch (Exception ex) {
					Log.LogErrorFromException(ex);
					return false;
				}
			]]>
			</Code>
		</Task>
	</UsingTask>

</Project>